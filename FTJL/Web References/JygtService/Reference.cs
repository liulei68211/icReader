//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace FTJL.JygtService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FoundationServiceSoap", Namespace="http://tempuri.org/")]
    public partial class FoundationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServiceRunStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceIPAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getsqlcomOperationCompleted;
        
        private System.Threading.SendOrPostCallback getrdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FoundationService() {
            this.Url = "http://localhost:55555/FoundationService/FoundationService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServiceRunStatusCompletedEventHandler GetServiceRunStatusCompleted;
        
        /// <remarks/>
        public event GetServiceTimeCompletedEventHandler GetServiceTimeCompleted;
        
        /// <remarks/>
        public event GetServiceIPAddressCompletedEventHandler GetServiceIPAddressCompleted;
        
        /// <remarks/>
        public event getsqlcomCompletedEventHandler getsqlcomCompleted;
        
        /// <remarks/>
        public event getrdCompletedEventHandler getrdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceRunStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseResult GetServiceRunStatus() {
            object[] results = this.Invoke("GetServiceRunStatus", new object[0]);
            return ((ResponseResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceRunStatusAsync() {
            this.GetServiceRunStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceRunStatusAsync(object userState) {
            if ((this.GetServiceRunStatusOperationCompleted == null)) {
                this.GetServiceRunStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceRunStatusOperationCompleted);
            }
            this.InvokeAsync("GetServiceRunStatus", new object[0], this.GetServiceRunStatusOperationCompleted, userState);
        }
        
        private void OnGetServiceRunStatusOperationCompleted(object arg) {
            if ((this.GetServiceRunStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceRunStatusCompleted(this, new GetServiceRunStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseResult GetServiceTime() {
            object[] results = this.Invoke("GetServiceTime", new object[0]);
            return ((ResponseResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceTimeAsync() {
            this.GetServiceTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceTimeAsync(object userState) {
            if ((this.GetServiceTimeOperationCompleted == null)) {
                this.GetServiceTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceTimeOperationCompleted);
            }
            this.InvokeAsync("GetServiceTime", new object[0], this.GetServiceTimeOperationCompleted, userState);
        }
        
        private void OnGetServiceTimeOperationCompleted(object arg) {
            if ((this.GetServiceTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceTimeCompleted(this, new GetServiceTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceIPAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseResult GetServiceIPAddress() {
            object[] results = this.Invoke("GetServiceIPAddress", new object[0]);
            return ((ResponseResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceIPAddressAsync() {
            this.GetServiceIPAddressAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceIPAddressAsync(object userState) {
            if ((this.GetServiceIPAddressOperationCompleted == null)) {
                this.GetServiceIPAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceIPAddressOperationCompleted);
            }
            this.InvokeAsync("GetServiceIPAddress", new object[0], this.GetServiceIPAddressOperationCompleted, userState);
        }
        
        private void OnGetServiceIPAddressOperationCompleted(object arg) {
            if ((this.GetServiceIPAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceIPAddressCompleted(this, new GetServiceIPAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getsqlcom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getsqlcom(string SQLstr) {
            this.Invoke("getsqlcom", new object[] {
                        SQLstr});
        }
        
        /// <remarks/>
        public void getsqlcomAsync(string SQLstr) {
            this.getsqlcomAsync(SQLstr, null);
        }
        
        /// <remarks/>
        public void getsqlcomAsync(string SQLstr, object userState) {
            if ((this.getsqlcomOperationCompleted == null)) {
                this.getsqlcomOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetsqlcomOperationCompleted);
            }
            this.InvokeAsync("getsqlcom", new object[] {
                        SQLstr}, this.getsqlcomOperationCompleted, userState);
        }
        
        private void OngetsqlcomOperationCompleted(object arg) {
            if ((this.getsqlcomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getsqlcomCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getrd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getrd(string SQLstr) {
            object[] results = this.Invoke("getrd", new object[] {
                        SQLstr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getrdAsync(string SQLstr) {
            this.getrdAsync(SQLstr, null);
        }
        
        /// <remarks/>
        public void getrdAsync(string SQLstr, object userState) {
            if ((this.getrdOperationCompleted == null)) {
                this.getrdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetrdOperationCompleted);
            }
            this.InvokeAsync("getrd", new object[] {
                        SQLstr}, this.getrdOperationCompleted, userState);
        }
        
        private void OngetrdOperationCompleted(object arg) {
            if ((this.getrdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getrdCompleted(this, new getrdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResponseResult {
        
        private int requestStatusField;
        
        private string msgField;
        
        /// <remarks/>
        public int RequestStatus {
            get {
                return this.requestStatusField;
            }
            set {
                this.requestStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetServiceRunStatusCompletedEventHandler(object sender, GetServiceRunStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceRunStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceRunStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetServiceTimeCompletedEventHandler(object sender, GetServiceTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetServiceIPAddressCompletedEventHandler(object sender, GetServiceIPAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceIPAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceIPAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getsqlcomCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getrdCompletedEventHandler(object sender, getrdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getrdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getrdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591